# The outcome of a sub_train_obedience scheme

namespace = sub_train_obedience_outcome

## This mod hasn't set up outcome events for either AI or player targets, nor an
## on_action for scheme failure, as it currently assumes only players will be
## initiating the scheme, and that success chance is always 100%

# Following CK3 scheme outcome conventions:
# 0000-0999: Maintenance events
# 1000-1999: Setup events
# 2000-2999: Success events for scheme owner
# 3000-3999: Success events for scheme target
# 4000-4999: Failure events for scheme owner

##"Hard" rejections that block the target for future schemes
# 8100-8999: Early outcome events

# 0001: target died
# 0002: relationship with target changed
# 1000: scheme begins
# 2000: success

######################################################
# MAINTENANCE EVENTS
# 0000-0999
######################################################

# Target died
sub_train_obedience_outcome.0001 = {
	type = character_event
	title = sub_train_obedience_outcome.0002.t
	desc = sub_train_obedience_outcome.0002.desc

	theme = seduce_scheme
	left_portrait = scope:target
	#No scheme, no widget

	option = {
		name = sub_train_obedience_outcome.0002.a
	}
}

# No more valid relation with target
sub_train_obedience_outcome.0002 = {
	type = character_event
	title = sub_train_obedience_outcome.0001.t
	desc = sub_train_obedience_outcome.0001.desc

	theme = seduce_scheme
	left_portrait = scope:target
	#No scheme, no widget

	option = {
		name = sub_train_obedience_outcome.0001.a
	}
}

######################################################
# SETUP EVENTS
# 1000-1999
######################################################

# Begin scheme
sub_train_obedience_outcome.1000 = {
	type = character_event
	title = sub_train_obedience_outcome.1000.t
	desc = sub_train_obedience_outcome.1000.desc

	theme = seduce_scheme
	left_portrait = scope:target
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}

	trigger = {
		exists = scope:scheme
	}

	immediate = {
		scope:target = {
			sub_select_submissive_traits = yes
		}
	}

	# TBD: currently gives bad option if sub isn't content, should update to use different
	# scripted effect and use current scripted effect for milestone events
	option = {
		trigger = {
			scope:target = {
				has_character_flag = sub_replacement_trait_content
			}
		}
		name = "do bad response"
	}

	option = {
		name = sub_train_obedience_outcome.1000.a

		trigger_event = {
			on_action = sub_train_obedience_start_response
		}
	}

	after = {
		scope:target = {
			sub_train_obedience_event_aftereffects = yes
		}
	}
}

# Training begin responses
sub_train_obedience_outcome.1001 = {}

######################################################
# SUCCESS EVENTS FOR OWNER
# 2000-2999
######################################################

sub_train_obedience_outcome.2000 = {
	type = character_event
	title = sub_train_obedience_outcome.2000.t
	desc = sub_train_obedience_outcome.2000.desc

	theme = seduce_scheme
	left_portrait = scope:target
	widget = {
		gui = "event_window_widget_scheme"
		container = "custom_widgets_container"
	}


	immediate = {
		play_music_cue = "mx_cue_seduction"
		scope:target = {
			add_trait = sub_subservient_4
			add_opinion = {
				modifier = sub_subservient_to_master
				target = scope:owner
			}
		}
		scope:owner = {
			add_hook = {
				type = loyalty_hook
				target = scope:target
			}
			add_character_modifier = {
				modifier = sub_recent_training_modifier
				years = 5
			}
		}
	}

	option = {
		name = sub_train_obedience_outcome.2000.a
	}

	after = {
		if = {
			limit = { exists = scope:scheme }
			scope:scheme = {
				end_scheme = yes
			}
		}
	}
}
