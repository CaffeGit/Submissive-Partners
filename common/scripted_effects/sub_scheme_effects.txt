# scripted effects needed
	# add to scheme power for each good sub trait target has
	# subtract from scheme power for each bad sub trait target has
	# choose which modifiers to add/subtract on trait swap

########
## Random Trait Selection Effects
########

# selects a random good sub trait to be added that target character doesn't have
# call on a scheme
sub_select_random_new_good_sub_trait = {
	# clear the list so it can be recalculated
	if = {
		limit = {
			has_variable_list = sub_replacement_trait_option
		}
		clear_variable_list = sub_replacement_trait_option
	}

	# determine options
	if = {
		limit = {
			scope:target = {
				NOT = { has_trait = calm }
			}
		}
		add_to_variable_list = {
			name = sub_replacement_trait_option
			target = flag:calm
		}
	}
	if = {
		limit = {
			scope:target = {
				NOT = { has_trait = compassionate }
			}
		}
		add_to_variable_list = {
			name = sub_replacement_trait_option
			target = flag:compassionate
		}
	}
	if = {
		limit = {
			scope:target = {
				NOT = { has_trait = content }
			}
		}
		add_to_variable_list = {
			name = sub_replacement_trait_option
			target = flag:content
		}
	}
	if = {
		limit = {
			scope:target = {
				NOT = { has_trait = diligent }
			}
		}
		add_to_variable_list = {
			name = sub_replacement_trait_option
			target = flag:diligent
		}
	}
	if = {
		limit = {
			scope:target = {
				NOT = { has_trait = honest }
			}
		}
		add_to_variable_list = {
			name = sub_replacement_trait_option
			target = flag:honest
		}
	}
	if = {
		limit = {
			scope:target = {
				NOT = { has_trait = humble }
			}
		}
		add_to_variable_list = {
			name = sub_replacement_trait_option
			target = flag:humble
		}
	}
	if = {
		limit = {
			scope:target = {
				NOT = { has_trait = patient }
			}
		}
		add_to_variable_list = {
			name = sub_replacement_trait_option
			target = flag:patient
		}
	}
	if = {
		limit = {
			scope:target = {
				NOT = { has_trait = temperate }
			}
		}
		add_to_variable_list = {
			name = sub_replacement_trait_option
			target = flag:temperate
		}
	}
	if = {
		limit = {
			scope:target = {
				NOT = { has_trait = trusting }
			}
		}
		add_to_variable_list = {
			name = sub_replacement_trait_option
			target = flag:trusting
		}
	}

	# then choose from options
	hidden_effect = {
		random_list = {
			10 = {
				trigger = {
					is_target_in_variable_list = {
						name = sub_replacement_trait_option
						target = flag:calm
					}
				}
				scope:target = {
					add_character_flag = sub_replacement_trait_calm
				}
			}
			10 = {
				trigger = {
					is_target_in_variable_list = {
						name = sub_replacement_trait_option
						target = flag:compassionate
					}
				}
				scope:target = {
					add_character_flag = sub_replacement_trait_compassionate
				}
			}
			10 = {
				trigger = {
					is_target_in_variable_list = {
						name = sub_replacement_trait_option
						target = flag:content
					}
				}
				scope:target = {
					add_character_flag = sub_replacement_trait_content
				}
			}
			10 = {
				trigger = {
					is_target_in_variable_list = {
						name = sub_replacement_trait_option
						target = flag:diligent
					}
				}
				scope:target = {
					add_character_flag = sub_replacement_trait_diligent
				}
			}
			10 = {
				trigger = {
					is_target_in_variable_list = {
						name = sub_replacement_trait_option
						target = flag:honest
					}
				}
				scope:target = {
					add_character_flag = sub_replacement_trait_honest
				}
			}
			10 = {
				trigger = {
					is_target_in_variable_list = {
						name = sub_replacement_trait_option
						target = flag:humble
					}
				}
				scope:target = {
					add_character_flag = sub_replacement_trait_humble
				}
			}
			10 = {
				trigger = {
					is_target_in_variable_list = {
						name = sub_replacement_trait_option
						target = flag:patient
					}
				}
				scope:target = {
					add_character_flag = sub_replacement_trait_patient
				}
			}
			10 = {
				trigger = {
					is_target_in_variable_list = {
						name = sub_replacement_trait_option
						target = flag:temperate
					}
				}
				scope:target = {
					add_character_flag = sub_replacement_trait_temperate
				}
			}
			10 = {
				trigger = {
					is_target_in_variable_list = {
						name = sub_replacement_trait_option
						target = flag:trusting
					}
				}
				scope:target = {
					add_character_flag = sub_replacement_trait_trusting
				}
			}
		}
	}
}

# selects a random sub trait to be removed from the worst valid category (bad > questionable > neutral > good)
# call on a scheme
sub_select_random_replaced_trait = {
	sub_select_random_bad_sub_trait = yes
	if = {
		limit = {
			variable_list_size = {
				name = sub_bad_sub_traits
				value <= 1
			}
		}
		sub_select_random_questionable_sub_trait = yes
		if = {
			limit = {
				variable_list_size = {
					name = sub_questionable_sub_traits
					value <= 1
				}
			}
			sub_select_random_neutral_sub_trait = yes
			if = {
				limit = {
					variable_list_size = {
						name = sub_neutral_sub_traits
						value <= 1
					}
				}
				sub_select_random_good_sub_trait = yes		
			}
		}
	}
}

# selects a random bad sub trait that target character has
# call on a scheme
sub_select_random_bad_sub_trait = {
	# get the list of options
	sub_list_bad_sub_traits = yes

	# then choose from options and clear the list of options
	hidden_effect = {
		random_list = {
			10 = {
				trigger = {
					is_target_in_variable_list = {
						name = sub_bad_sub_traits
						target = flag:ambitious
					}
				}
				scope:target = {
					add_character_flag = sub_replaced_trait_ambitious
				}
			}
			10 = {
				trigger = {
					is_target_in_variable_list = {
						name = sub_bad_sub_traits
						target = flag:arrogant
					}
				}
				scope:target = {
					add_character_flag = sub_replaced_trait_arrogant
				}
			}
			10 = {
				trigger = {
					is_target_in_variable_list = {
						name = sub_bad_sub_traits
						target = flag:callous
					}
				}
				scope:target = {
					add_character_flag = sub_replaced_trait_callous
				}
			}
			10 = {
				trigger = {
					is_target_in_variable_list = {
						name = sub_bad_sub_traits
						target = flag:deceitful
					}
				}
				scope:target = {
					add_character_flag = sub_replaced_trait_deceitful
				}
			}
			10 = {
				trigger = {
					is_target_in_variable_list = {
						name = sub_bad_sub_traits
						target = flag:fickle
					}
				}
				scope:target = {
					add_character_flag = sub_replaced_trait_fickle
				}
			}
			10 = {
				trigger = {
					is_target_in_variable_list = {
						name = sub_bad_sub_traits
						target = flag:gluttonous
					}
				}
				scope:target = {
					add_character_flag = sub_replaced_trait_gluttonous
				}
			}
			10 = {
				trigger = {
					is_target_in_variable_list = {
						name = sub_bad_sub_traits
						target = flag:impatient
					}
				}
				scope:target = {
					add_character_flag = sub_replaced_trait_impatient
				}
			}
			10 = {
				trigger = {
					is_target_in_variable_list = {
						name = sub_bad_sub_traits
						target = flag:lazy
					}
				}
				scope:target = {
					add_character_flag = sub_replaced_trait_lazy
				}
			}
			10 = {
				trigger = {
					is_target_in_variable_list = {
						name = sub_bad_sub_traits
						target = flag:paranoid
					}
				}
				scope:target = {
					add_character_flag = sub_replaced_trait_paranoid
				}
			}
			10 = {
				trigger = {
					is_target_in_variable_list = {
						name = sub_bad_sub_traits
						target = flag:sadistic
					}
				}
				scope:target = {
					add_character_flag = sub_replaced_trait_sadistic
				}
			}
			10 = {
				trigger = {
					is_target_in_variable_list = {
						name = sub_bad_sub_traits
						target = flag:stubborn
					}
				}
				scope:target = {
					add_character_flag = sub_replaced_trait_stubborn
				}
			}
			10 = {
				trigger = {
					is_target_in_variable_list = {
						name = sub_bad_sub_traits
						target = flag:wrathful
					}
				}
				scope:target = {
					add_character_flag = sub_replaced_trait_wrathful
				}
			}
		}
	}
}

# selects a random questionable sub trait that target character has
# call on a scheme
sub_select_random_questionable_sub_trait = {
	# get the list of options
	sub_list_questionable_sub_traits = yes

	# then choose from options and clear the list of options
	hidden_effect = {
		random_list = {
			10 = {
				trigger = {
					is_target_in_variable_list = {
						name = sub_questionable_sub_traits
						target = flag:arbitrary
					}
				}
				scope:target = {
					add_character_flag = sub_replaced_trait_arbitrary
				}
			}
			10 = {
				trigger = {
					is_target_in_variable_list = {
						name = sub_questionable_sub_traits
						target = flag:chaste
					}
				}
				scope:target = {
					add_character_flag = sub_replaced_trait_chaste
				}
			}
		}
	}
}

# selects a random neutral sub trait that target character has
# call on a scheme
sub_select_random_neutral_sub_trait = {
	# get the list of options
	sub_list_neutral_sub_traits = yes		

	# then choose from options and clear the list of options
	hidden_effect = {
		random_list = {
			10 = {
				trigger = {
					is_target_in_variable_list = {
						name = sub_neutral_sub_traits
						target = flag:brave
					}
				}
				scope:target = {
					add_character_flag = sub_replaced_trait_brave
				}
			}
			10 = {
				trigger = {
					is_target_in_variable_list = {
						name = sub_neutral_sub_traits
						target = flag:craven
					}
				}
				scope:target = {
					add_character_flag = sub_replaced_trait_craven
				}
			}
			10 = {
				trigger = {
					is_target_in_variable_list = {
						name = sub_neutral_sub_traits
						target = flag:cynical
					}
				}
				scope:target = {
					add_character_flag = sub_replaced_trait_cynical
				}
			}
			10 = {
				trigger = {
					is_target_in_variable_list = {
						name = sub_neutral_sub_traits
						target = flag:generous
					}
				}
				scope:target = {
					add_character_flag = sub_replaced_trait_generous
				}
			}
			10 = {
				trigger = {
					is_target_in_variable_list = {
						name = sub_neutral_sub_traits
						target = flag:greedy
					}
				}
				scope:target = {
					add_character_flag = sub_replaced_trait_greedy
				}
			}
			10 = {
				trigger = {
					is_target_in_variable_list = {
						name = sub_neutral_sub_traits
						target = flag:gregarious
					}
				}
				scope:target = {
					add_character_flag = sub_replaced_trait_gregarious
				}
			}
			10 = {
				trigger = {
					is_target_in_variable_list = {
						name = sub_neutral_sub_traits
						target = flag:just
					}
				}
				scope:target = {
					add_character_flag = sub_replaced_trait_just
				}
			}
			10 = {
				trigger = {
					is_target_in_variable_list = {
						name = sub_neutral_sub_traits
						target = flag:lustful
					}
				}
				scope:target = {
					add_character_flag = sub_replaced_trait_lustful
				}
			}
			10 = {
				trigger = {
					is_target_in_variable_list = {
						name = sub_neutral_sub_traits
						target = flag:shy
					}
				}
				scope:target = {
					add_character_flag = sub_replaced_trait_shy
				}
			}
			10 = {
				trigger = {
					is_target_in_variable_list = {
						name = sub_neutral_sub_traits
						target = flag:zealous
					}
				}
				scope:target = {
					add_character_flag = sub_replaced_trait_zealous
				}
			}
		}
	}
}

# selects a random good sub trait that target character has
# call on a scheme
sub_select_random_good_sub_trait = {
	# get the list of options
	sub_list_good_sub_traits = yes

	# then choose from options and clear the list of options
	hidden_effect = {
		random_list = {
			10 = {
				trigger = {
					is_target_in_variable_list = {
						name = sub_good_sub_traits
						target = flag:calm
					}
				}
				scope:target = {
					add_character_flag = sub_replaced_trait_calm
				}
			}
			10 = {
				trigger = {
					is_target_in_variable_list = {
						name = sub_good_sub_traits
						target = flag:compassionate
					}
				}
				scope:target = {
					add_character_flag = sub_replaced_trait_compassionate
				}
			}
			10 = {
				trigger = {
					is_target_in_variable_list = {
						name = sub_good_sub_traits
						target = flag:content
					}
				}
				scope:target = {
					add_character_flag = sub_replaced_trait_content
				}
			}
			10 = {
				trigger = {
					is_target_in_variable_list = {
						name = sub_good_sub_traits
						target = flag:diligent
					}
				}
				scope:target = {
					add_character_flag = sub_replaced_trait_diligent
				}
			}
			10 = {
				trigger = {
					is_target_in_variable_list = {
						name = sub_good_sub_traits
						target = flag:honest
					}
				}
				scope:target = {
					add_character_flag = sub_replaced_trait_honest
				}
			}
			10 = {
				trigger = {
					is_target_in_variable_list = {
						name = sub_good_sub_traits
						target = flag:humble
					}
				}
				scope:target = {
					add_character_flag = sub_replaced_trait_humble
				}
			}
			10 = {
				trigger = {
					is_target_in_variable_list = {
						name = sub_good_sub_traits
						target = flag:patient
					}
				}
				scope:target = {
					add_character_flag = sub_replaced_trait_patient
				}
			}
			10 = {
				trigger = {
					is_target_in_variable_list = {
						name = sub_good_sub_traits
						target = flag:temperate
					}
				}
				scope:target = {
					add_character_flag = sub_replaced_trait_temperate
				}
			}
			10 = {
				trigger = {
					is_target_in_variable_list = {
						name = sub_good_sub_traits
						target = flag:trusting
					}
				}
				scope:target = {
					add_character_flag = sub_replaced_trait_trusting
				}
			}
		}
	}
}

# adds flagged replacement trait and removes removes flagged replaced trait
# call on a character
sub_add_and_remove_selected_sub_traits = {
	# Add trait based on character flag sub_replacement_trait_[trait_name]
	if = {
		limit = { has_character_flag = sub_replacement_trait_calm }
		add_trait = calm
	}
	if = {
		limit = { has_character_flag = sub_replacement_trait_compassionate }
		add_trait = compassionate
	}
	if = {
		limit = { has_character_flag = sub_replacement_trait_content }
		add_trait = content
	}
	if = {
		limit = { has_character_flag = sub_replacement_trait_diligent }
		add_trait = diligent
	}
	if = {
		limit = { has_character_flag = sub_replacement_trait_honest }
		add_trait = honest
	}
	if = {
		limit = { has_character_flag = sub_replacement_trait_humble }
		add_trait = humble
	}
	if = {
		limit = { has_character_flag = sub_replacement_trait_patient }
		add_trait = patient
	}
	if = {
		limit = { has_character_flag = sub_replacement_trait_temperate }
		add_trait = temperate
	}
	if = {
		limit = { has_character_flag = sub_replacement_trait_trusting }
		add_trait = trusting
	}

	# Remove trait based on character flag sub_replaced_trait_[trait_name]

	# bad traits
	if = {
		limit = { has_character_flag = sub_replaced_trait_ambitious }
		remove_trait = ambitious
	}
	if = {
		limit = { has_character_flag = sub_replaced_trait_arrogant }
		remove_trait = arrogant
	}
	if = {
		limit = { has_character_flag = sub_replaced_trait_callous }
		remove_trait = callous
	}
	if = {
		limit = { has_character_flag = sub_replaced_trait_deceitful }
		remove_trait = deceitful
	}
	if = {
		limit = { has_character_flag = sub_replaced_trait_fickle }
		remove_trait = fickle
	}
	if = {
		limit = { has_character_flag = sub_replaced_trait_gluttonous }
		remove_trait = gluttonous
	}
	if = {
		limit = { has_character_flag = sub_replaced_trait_impatient }
		remove_trait = impatient
	}
	if = {
		limit = { has_character_flag = sub_replaced_trait_lazy }
		remove_trait = lazy
	}
	if = {
		limit = { has_character_flag = sub_replaced_trait_paranoid }
		remove_trait = paranoid
	}
	if = {
		limit = { has_character_flag = sub_replaced_trait_sadistic }
		remove_trait = sadistic
	}
	if = {
		limit = { has_character_flag = sub_replaced_trait_stubborn }
		remove_trait = stubborn
	}
	if = {
		limit = { has_character_flag = sub_replaced_trait_wrathful }
		remove_trait = wrathful
	}

	# questionable traits
	if = {
		limit = { has_character_flag = sub_replaced_trait_arbitrary }
		remove_trait = arbitrary
	}
	if = {
		limit = { has_character_flag = sub_replaced_trait_chaste }
		remove_trait = chaste
	}

	# neutral traits
	if = {
		limit = { has_character_flag = sub_replaced_trait_brave }
		remove_trait = brave
	}
	if = {
		limit = { has_character_flag = sub_replaced_trait_craven }
		remove_trait = craven
	}
	if = {
		limit = { has_character_flag = sub_replaced_trait_cynical }
		remove_trait = cynical
	}
	if = {
		limit = { has_character_flag = sub_replaced_trait_generous }
		remove_trait = generous
	}
	if = {
		limit = { has_character_flag = sub_replaced_trait_greedy }
		remove_trait = greedy
	}
	if = {
		limit = { has_character_flag = sub_replaced_trait_gregarious }
		remove_trait = gregarious
	}
	if = {
		limit = { has_character_flag = sub_replaced_trait_just }
		remove_trait = just
	}
	if = {
		limit = { has_character_flag = sub_replaced_trait_lustful }
		remove_trait = lustful
	}
	if = {
		limit = { has_character_flag = sub_replaced_trait_shy }
		remove_trait = shy
	}
	if = {
		limit = { has_character_flag = sub_replaced_trait_zealous }
		remove_trait = zealous
	}

	# good traits
	if = {
		limit = { has_character_flag = sub_replaced_trait_calm }
		remove_trait = calm
	}
	if = {
		limit = { has_character_flag = sub_replaced_trait_compassionate }
		remove_trait = compassionate
	}
	if = {
		limit = { has_character_flag = sub_replaced_trait_content }
		remove_trait = content
	}
	if = {
		limit = { has_character_flag = sub_replaced_trait_diligent }
		remove_trait = diligent
	}
	if = {
		limit = { has_character_flag = sub_replaced_trait_honest }
		remove_trait = honest
	}
	if = {
		limit = { has_character_flag = sub_replaced_trait_humble }
		remove_trait = humble
	}
	if = {
		limit = { has_character_flag = sub_replaced_trait_patient }
		remove_trait = patient
	}
	if = {
		limit = { has_character_flag = sub_replaced_trait_temperate }
		remove_trait = temperate
	}
	if = {
		limit = { has_character_flag = sub_replaced_trait_trusting }
		remove_trait = trusting
	}
}

########
## Scheme Effects
########

# (re)calcs modifiers to scheme power/resistance based on opinion
# call on a scheme
sub_set_scheme_opinion_modifier = {
	remove_scheme_modifier = sub_highest_pos_opinion_scheme_power
	remove_scheme_modifier = sub_high_pos_opinion_scheme_power
	remove_scheme_modifier = sub_medium_pos_opinion_scheme_power
	remove_scheme_modifier = sub_low_pos_opinion_scheme_power
	remove_scheme_modifier = sub_highest_neg_opinion_scheme_resistance
	remove_scheme_modifier = sub_high_neg_opinion_scheme_resistance
	remove_scheme_modifier = sub_medium_neg_opinion_scheme_resistance
	remove_scheme_modifier = sub_low_neg_opinion_scheme_resistance
	
	if = {
		limit = {
			scope:target = {
				opinion = {
					target = scope:owner
					value >= very_high_positive_opinion
				}
			}
		}
		add_scheme_modifier = { type = sub_highest_pos_opinion_scheme_power }
	}
	else_if = {
		limit = {
			scope:target = {
				opinion = {
					target = scope:owner
					value >= high_positive_opinion
				}
			}
		}
		add_scheme_modifier = { type = sub_high_pos_opinion_scheme_power}
	 }
	else_if = {
		limit = {
			scope:target = {
				opinion = {
					target = scope:owner
					value >= medium_positive_opinion
				}
			}
		}
		add_scheme_modifier = { type = sub_medium_pos_opinion_scheme_power} 
	}
	else_if = {
		limit = {
			scope:target = {
				opinion = {
					target = scope:owner
					value >= low_positive_opinion
				}
			}
		}
		add_scheme_modifier = { type = sub_low_pos_opinion_scheme_power}
	} 

	if = {
		limit = {
			scope:target = {
				opinion = {
					target = scope:owner
					value <= very_high_negative_opinion
				}
			}
		}
		add_scheme_modifier = { type = sub_highest_neg_opinion_scheme_resistance}
	}
	else_if = {
		limit = {
			scope:target = {
				opinion = {
					target = scope:owner
					value <= high_negative_opinion
				}
			}
		}
		add_scheme_modifier = { type = sub_high_neg_opinion_scheme_resistance}
	}
	else_if = {
		limit = {
			scope:target = {
				opinion = {
					target = scope:owner
					value <= medium_negative_opinion
				}
			}
		}
		add_scheme_modifier = { type = sub_medium_neg_opinion_scheme_resistance}
	}
	else_if = {
		limit = {
			scope:target = {
				opinion = {
					target = scope:owner
					value <= low_negative_opinion
				}
			}
		}
		add_scheme_modifier = { type = sub_low_neg_opinion_scheme_resistance}
	}
}

# sets variables and modifiers on scheme counting target's good/bad sub traits
# call on a scheme
sub_count_categorized_personality_traits = {
	# Get lists of target's traits in each category
	sub_list_good_sub_traits = yes
	sub_list_bad_sub_traits = yes
	sub_list_questionable_sub_traits = yes
	sub_list_neutral_sub_traits = yes

	# Set number of good/bad sub traits and corresponding scheme modifiers
	set_variable = {
		name = sub_num_good_sub_traits
		value = 0
	}
	every_in_list = {
		variable = sub_good_sub_traits
		scope:scheme = {
			change_variable = {
				name = sub_num_good_sub_traits
				add = 1
			}
			hidden_effect = {
				add_scheme_modifier = { type = sub_positive_trait_scheme_power }
			}
		}
	}
	set_variable = {
		name = sub_num_good_sub_traits_plus_one
		value = {
			value = scope:scheme.var:sub_num_good_sub_traits
			add = 1
		}
	}
	set_variable = {
		name = sub_num_bad_sub_traits
		value = 0
	}
	every_in_list = {
		variable = sub_bad_sub_traits
		scope:scheme = {
			change_variable = {
				name = sub_num_bad_sub_traits
				add = 1
			}
			hidden_effect = {
				add_scheme_modifier = { type = sub_negative_trait_scheme_resistance }
			}
		}
	}
	set_variable = {
		name = sub_num_bad_sub_traits_plus_one
		value = {
			value = scope:scheme.var:sub_num_bad_sub_traits
			add = 1
		}
	}

	# Set scheme modifier(s) for any prior training
	if = {
		limit = {
			scope:target = {
				OR = {
					has_trait = sub_subservient_1
					has_trait = sub_subservient_2
					has_trait = sub_subservient_3
				}
			}
		}
		scope:scheme = {
			hidden_effect = {
				add_scheme_modifier = { type = sub_training_milestone_scheme_power_1 }
			}
		}
	}
	if = {
		limit = {
			scope:target = {
				OR = {
					has_trait = sub_subservient_2
					has_trait = sub_subservient_3
				}
			}
		}
		scope:scheme = {
			hidden_effect = {
				add_scheme_modifier = { type = sub_training_milestone_scheme_power_2 }
			}
		}
	}
	if = {
		limit = {
			scope:target = {
				has_trait = sub_subservient_3
			}
		}
		scope:scheme = {
			hidden_effect = {
				add_scheme_modifier = { type = sub_training_milestone_scheme_power_3 }
			}
		}
	}
}

# sets flag on target indicating receptiveness to sub_train_obedience scheme
# call on a scheme
sub_set_train_obedience_receptiveness = {
	# Remove flags that may be left over from previous scheme(s)
	scope:target = {
		remove_character_flag = sub_receptive_training_response
		remove_character_flag = sub_unreceptive_training_response
		remove_character_flag = sub_neutral_training_response
	}

	if = {
		limit = {
			OR = {
				# Was previously trained
				scope:target = { has_trait = sub_subservient }
				# Amenable personality & doesn't dislike scheme owner
				AND = {
					var:sub_num_good_sub_traits = { compare_value > scope:scheme.var:sub_num_bad_sub_traits_plus_one }
					scope:target = {
						opinion = {
							target = scope:owner
							value >= neutral_opinion
						}
					}
				}
				# Somewhat amenable personality & likes scheme owner
				AND = {
					var:sub_num_good_sub_traits = { compare_value > scope:scheme.var:sub_num_bad_sub_traits}
					scope:target = {
						opinion = {
							target = scope:owner
							value >= medium_positive_opinion
						}
					}
				}
			}
		}
		scope:target = {
			add_character_flag = sub_receptive_training_response
		}
	}
	else_if = {
		limit = {
			OR = {
				# Independent personality & doesn't really like scheme owner
				AND = {
					var:sub_num_bad_sub_traits = { compare_value > scope:scheme.var:sub_num_good_sub_traits_plus_one }
					scope:target = {
						opinion = {
							target = scope:owner
							value <= high_positive_opinion
						}
					}
				}
				# Somewhat independent personality & dislikes scheme owner
				AND = {
					var:sub_num_bad_sub_traits = { compare_value > scope:scheme.var:sub_num_good_sub_traits }
					scope:target = {
						opinion = {
							target = scope:owner
							value <= neutral_opinion
						}
					}
				}
			}
		}
		scope:target = {
			add_character_flag = sub_unreceptive_training_response
		}
	}
	else = {
		scope:target = {
			add_character_flag = sub_neutral_training_response
		}
	}
}

########
## Make List Effects
########

# make a list of all the good sub traits that target character has
# call on a scheme
sub_list_good_sub_traits = {
	# clear the list so it can be recalculated
	if = {
		limit = {
			has_variable_list = sub_good_sub_traits
		}
		clear_variable_list = sub_good_sub_traits
	}

	# CK3 errors if you check nonexistent lists for size, so throw something random in there to start
	add_to_variable_list = {
		name = sub_good_sub_traits
		target = 0
	}

	# fill the list
	if = {
		limit = {
			scope:target = {
				has_trait = calm
			}
		}
		add_to_variable_list = {
			name = sub_good_sub_traits
			target = flag:calm
		}
	}
	if = {
		limit = {
			scope:target = {
				has_trait = compassionate
			}
		}
		add_to_variable_list = {
			name = sub_good_sub_traits
			target = flag:compassionate
		}
	}
	if = {
		limit = {
			scope:target = {
				has_trait = content
			}
		}
		add_to_variable_list = {
			name = sub_good_sub_traits
			target = flag:content
		}
	}
	if = {
		limit = {
			scope:target = {
				has_trait = diligent
			}
		}
		add_to_variable_list = {
			name = sub_good_sub_traits
			target = flag:diligent
		}
	}
	if = {
		limit = {
			scope:target = {
				has_trait = honest
			}
		}
		add_to_variable_list = {
			name = sub_good_sub_traits
			target = flag:honest
		}
	}
	if = {
		limit = {
			scope:target = {
				has_trait = humble
			}
		}
		add_to_variable_list = {
			name = sub_good_sub_traits
			target = flag:humble
		}
	}
	if = {
		limit = {
			scope:target = {
				has_trait = patient
			}
		}
		add_to_variable_list = {
			name = sub_good_sub_traits
			target = flag:patient
		}
	}
	if = {
		limit = {
			scope:target = {
				has_trait = temperate
			}
		}
		add_to_variable_list = {
			name = sub_good_sub_traits
			target = flag:temperate
		}
	}
	if = {
		limit = {
			scope:target = {
				has_trait = trusting
			}
		}
		add_to_variable_list = {
			name = sub_good_sub_traits
			target = flag:trusting
		}
	}	
}

# make a list of all the bad sub traits that target character has
# call on a scheme
sub_list_bad_sub_traits = {
	# clear the list so it can be recalculated
	if = {
		limit = {
			has_variable_list = sub_bad_sub_traits
		}
		clear_variable_list = sub_bad_sub_traits
	}

	# CK3 errors if you check nonexistent lists for size, so throw something random in there to start
	add_to_variable_list = {
		name = sub_bad_sub_traits
		target = 0
	}

	# fill the list
	if = {
		limit = {
			scope:target = {
				has_trait = ambitious
			}
		}
		add_to_variable_list = {
			name = sub_bad_sub_traits
			target = flag:ambitious
		}
	}
	if = {
		limit = {
			scope:target = {
				has_trait = arrogant
			}
		}
		add_to_variable_list = {
			name = sub_bad_sub_traits
			target = flag:arrogant
		}
	}
	if = {
		limit = {
			scope:target = {
				has_trait = callous
			}
		}
		add_to_variable_list = {
			name = sub_bad_sub_traits
			target = flag:callous
		}
	}
	if = {
		limit = {
			scope:target = {
				has_trait = deceitful
			}
		}
		add_to_variable_list = {
			name = sub_bad_sub_traits
			target = flag:deceitful
		}
	}
	if = {
		limit = {
			scope:target = {
				has_trait = fickle
			}
		}
		add_to_variable_list = {
			name = sub_bad_sub_traits
			target = flag:fickle
		}
	}
	if = {
		limit = {
			scope:target = {
				has_trait = gluttonous
			}
		}
		add_to_variable_list = {
			name = sub_bad_sub_traits
			target = flag:gluttonous
		}
	}
	if = {
		limit = {
			scope:target = {
				has_trait = impatient
			}
		}
		add_to_variable_list = {
			name = sub_bad_sub_traits
			target = flag:impatient
		}
	}
	if = {
		limit = {
			scope:target = {
				has_trait = lazy
			}
		}
		add_to_variable_list = {
			name = sub_bad_sub_traits
			target = flag:lazy
		}
	}
	if = {
		limit = {
			scope:target = {
				has_trait = paranoid
			}
		}
		add_to_variable_list = {
			name = sub_bad_sub_traits
			target = flag:paranoid
		}
	}
	if = {
		limit = {
			scope:target = {
				has_trait = sadistic
			}
		}
		add_to_variable_list = {
			name = sub_bad_sub_traits
			target = flag:sadistic
		}
	}
	if = {
		limit = {
			scope:target = {
				has_trait = stubborn
			}
		}
		add_to_variable_list = {
			name = sub_bad_sub_traits
			target = flag:stubborn
		}
	}
	if = {
		limit = {
			scope:target = {
				has_trait = wrathful
			}
		}
		add_to_variable_list = {
			name = sub_bad_sub_traits
			target = flag:wrathful
		}
	}
}

# make a list of all the questionable sub traits that target character has
# call on a scheme
sub_list_questionable_sub_traits = {
	# clear the list so it can be recalculated
	if = {
		limit = {
			has_variable_list = sub_questionable_sub_traits
		}
		clear_variable_list = sub_questionable_sub_traits
	}

	# CK3 errors if you check nonexistent lists for size, so throw something random in there to start
	add_to_variable_list = {
		name = sub_questionable_sub_traits
		target = 0
	}

	# fill the list
	if = {
		limit = {
			scope:target = {
				has_trait = arbitrary
			}
		}
		add_to_variable_list = {
			name = sub_questionable_sub_traits
			target = flag:arbitrary
		}
	}
	if = {
		limit = {
			scope:target = {
				has_trait = chaste
			}
		}
		add_to_variable_list = {
			name = sub_questionable_sub_traits
			target = flag:chaste
		}
	}
}

# make a list of all the neutral sub traits that target character has
# call on a scheme
sub_list_neutral_sub_traits = {
	# clear the list so it can be recalculated
	if = {
		limit = {
			has_variable_list = sub_neutral_sub_traits
		}
		clear_variable_list = sub_neutral_sub_traits
	}

	# CK3 errors if you check nonexistent lists for size, so throw something random in there to start
	add_to_variable_list = {
		name = sub_neutral_sub_traits
		target = 0
	}

	# fill the list
	if = {
		limit = {
			scope:target = {
				has_trait = brave
			}
		}
		add_to_variable_list = {
			name = sub_neutral_sub_traits
			target = flag:brave
		}
	}
	if = {
		limit = {
			scope:target = {
				has_trait = craven
			}
		}
		add_to_variable_list = {
			name = sub_neutral_sub_traits
			target = flag:craven
		}
	}
	if = {
		limit = {
			scope:target = {
				has_trait = cynical
			}
		}
		add_to_variable_list = {
			name = sub_neutral_sub_traits
			target = flag:cynical
		}
	}
	if = {
		limit = {
			scope:target = {
				has_trait = generous
			}
		}
		add_to_variable_list = {
			name = sub_neutral_sub_traits
			target = flag:generous
		}
	}
	if = {
		limit = {
			scope:target = {
				has_trait = greedy
			}
		}
		add_to_variable_list = {
			name = sub_neutral_sub_traits
			target = flag:greedy
		}
	}
	if = {
		limit = {
			scope:target = {
				has_trait = gregarious
			}
		}
		add_to_variable_list = {
			name = sub_neutral_sub_traits
			target = flag:gregarious
		}
	}
	if = {
		limit = {
			scope:target = {
				has_trait = just
			}
		}
		add_to_variable_list = {
			name = sub_neutral_sub_traits
			target = flag:just
		}
	}
	if = {
		limit = {
			scope:target = {
				has_trait = lustful
			}
		}
		add_to_variable_list = {
			name = sub_neutral_sub_traits
			target = flag:lustful
		}
	}
	if = {
		limit = {
			scope:target = {
				has_trait = shy
			}
		}
		add_to_variable_list = {
			name = sub_neutral_sub_traits
			target = flag:shy
		}
	}
	if = {
		limit = {
			scope:target = {
				has_trait = zealous
			}
		}
		add_to_variable_list = {
			name = sub_neutral_sub_traits
			target = flag:zealous
		}
	}
}

########
## Maintenance Effects
########

# clean temporary character flags after they have been used
# call on a scheme
sub_train_obedience_event_aftereffects = {
	scope:target = {
		# replacement traits
		remove_character_flag = sub_replacement_trait_calm
		remove_character_flag = sub_replacement_trait_compassionate
		remove_character_flag = sub_replacement_trait_content
		remove_character_flag = sub_replacement_trait_diligent
		remove_character_flag = sub_replacement_trait_honest
		remove_character_flag = sub_replacement_trait_humble
		remove_character_flag = sub_replacement_trait_patient
		remove_character_flag = sub_replacement_trait_temperate
		remove_character_flag = sub_replacement_trait_trusting

		# bad replaced traits
		remove_character_flag = sub_replaced_trait_ambitious
		remove_character_flag = sub_replaced_trait_arrogant
		remove_character_flag = sub_replaced_trait_callous
		remove_character_flag = sub_replaced_trait_deceitful
		remove_character_flag = sub_replaced_trait_fickle
		remove_character_flag = sub_replaced_trait_gluttonous
		remove_character_flag = sub_replaced_trait_impatient
		remove_character_flag = sub_replaced_trait_lazy
		remove_character_flag = sub_replaced_trait_paranoid
		remove_character_flag = sub_replaced_trait_sadistic
		remove_character_flag = sub_replaced_trait_stubborn
		remove_character_flag = sub_replaced_trait_wrathful

		# questionable replaced traits
		remove_character_flag = sub_replaced_trait_arbitrary
		remove_character_flag = sub_replaced_trait_chaste

		# neutral replaced traits
		remove_character_flag = sub_replaced_trait_brave
		remove_character_flag = sub_replaced_trait_craven
		remove_character_flag = sub_replaced_trait_cynical
		remove_character_flag = sub_replaced_trait_generous
		remove_character_flag = sub_replaced_trait_greedy
		remove_character_flag = sub_replaced_trait_gregarious
		remove_character_flag = sub_replaced_trait_just
		remove_character_flag = sub_replaced_trait_lustful
		remove_character_flag = sub_replaced_trait_shy
		remove_character_flag = sub_replaced_trait_zealous

		# good replaced traits
		remove_character_flag = sub_replaced_trait_calm
		remove_character_flag = sub_replaced_trait_compassionate
		remove_character_flag = sub_replaced_trait_content
		remove_character_flag = sub_replaced_trait_diligent
		remove_character_flag = sub_replaced_trait_honest
		remove_character_flag = sub_replaced_trait_humble
		remove_character_flag = sub_replaced_trait_patient
		remove_character_flag = sub_replaced_trait_temperate
		remove_character_flag = sub_replaced_trait_trusting
	}
}

# To get around a Jomini bug/"feature" where it won't look for variable declarations in effects
# that use those variables, the variables used in this scheme are initially created here. All
# of these values will get overridden later.
# If this effect isn't used, the error log gets cluttered with 'could not find list'-type messages.
# call on a scheme ONCE on_start
sub_train_obedience_set_dummy_variables = {
	add_to_variable_list = {
		name = sub_bad_sub_traits
		target = 0
	}
	add_to_variable_list = {
		name = sub_questionable_sub_traits
		target = 0
	}
	add_to_variable_list = {
		name = sub_neutral_sub_traits
		target = 0
	}
	add_to_variable_list = {
		name = sub_good_sub_traits
		target = 0
	}
	set_variable = {
		name = sub_num_good_sub_traits
		value = 0
	}
	set_variable = {
		name = sub_num_bad_sub_traits
		value = 0
	}
	set_variable = {
		name = sub_num_good_sub_traits_plus_one
		value = 0
	}
	set_variable = {
		name = sub_num_bad_sub_traits_plus_one
		value = 0
	}
}